/*
Deployment script for Bndb.IBanStore.Db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Bndb.IBanStore.Db.Test"
:setvar DefaultFilePrefix "Bndb.IBanStore.Db.Test"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [ib]...';


GO
CREATE SCHEMA [ib]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ib].[EnumIBanStatus]...';


GO
CREATE TABLE [ib].[EnumIBanStatus] (
    [StatusId]   INT          NOT NULL,
    [IBanStatus] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([StatusId] ASC)
);


GO
PRINT N'Creating [ib].[EnumBbanFileStatus]...';


GO
CREATE TABLE [ib].[EnumBbanFileStatus] (
    [StatusId]       INT          NOT NULL,
    [BbanFileStatus] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([StatusId] ASC)
);


GO
PRINT N'Creating [ib].[BbanFileHistory]...';


GO
CREATE TABLE [ib].[BbanFileHistory] (
    [HistoryId]        INT            IDENTITY (1, 1) NOT NULL,
    [BbanFileId]       INT            NOT NULL,
    [BbanFileStatusId] INT            NOT NULL,
    [Remark]           NVARCHAR (MAX) NULL,
    [Context]          NVARCHAR (50)  NULL,
    [ChangedDate]      DATETIME       NOT NULL,
    [ChangedBy]        NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([HistoryId] ASC)
);


GO
PRINT N'Creating [ib].[BbanFile]...';


GO
CREATE TABLE [ib].[BbanFile] (
    [BbanFileId]             INT             IDENTITY (1, 1) NOT NULL,
    [Name]                   NVARCHAR (255)  NOT NULL,
    [RawFile]                VARBINARY (MAX) NOT NULL,
    [Hash]                   VARCHAR (64)    NOT NULL,
    [CurrentStatusHistoryId] INT             NULL,
    PRIMARY KEY CLUSTERED ([BbanFileId] ASC),
    CONSTRAINT [AK_BbanFile_Hash] UNIQUE NONCLUSTERED ([Hash] ASC)
);


GO
PRINT N'Creating [ib].[IBanHistory]...';


GO
CREATE TABLE [ib].[IBanHistory] (
    [HistoryId]    INT            IDENTITY (1, 1) NOT NULL,
    [IBanId]       INT            NOT NULL,
    [IBanStatusId] INT            NOT NULL,
    [Remark]       NVARCHAR (MAX) NULL,
    [Context]      NVARCHAR (50)  NULL,
    [ChangedDate]  DATETIME       NOT NULL,
    [ChangedBy]    NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([HistoryId] ASC)
);


GO
PRINT N'Creating [ib].[IBan]...';


GO
CREATE TABLE [ib].[IBan] (
    [IBanId]                 INT           IDENTITY (1, 1) NOT NULL,
    [BbanFileId]             INT           NOT NULL,
    [Uid]                    VARCHAR (256) NULL,
    [UidPrefix]              VARCHAR (256) NULL,
    [ReservedTime]           DATETIME      NULL,
    [CountryCode]            VARCHAR (2)   NOT NULL,
    [BankCode]               VARCHAR (4)   NOT NULL,
    [CheckSum]               VARCHAR (2)   NOT NULL,
    [Bban]                   VARCHAR (10)  NOT NULL,
    [CurrentStatusHistoryId] INT           NULL,
    PRIMARY KEY CLUSTERED ([IBanId] ASC)
);


GO
PRINT N'Creating [ib].[BbanImport]...';


GO
CREATE TABLE [ib].[BbanImport] (
    [BbanImportId] INT          IDENTITY (1, 1) NOT NULL,
    [BbanFileId]   INT          NOT NULL,
    [Bban]         VARCHAR (10) NOT NULL,
    [IsImported]   BIT          NOT NULL,
    PRIMARY KEY CLUSTERED ([BbanImportId] ASC),
    CONSTRAINT [AK_BbanImport_Bban] UNIQUE NONCLUSTERED ([Bban] ASC)
);


GO
PRINT N'Creating unnamed constraint on [ib].[BbanImport]...';


GO
ALTER TABLE [ib].[BbanImport]
    ADD DEFAULT 0 FOR [IsImported];


GO
PRINT N'Creating [ib].[FK_BbanFileHistory_BbanFile]...';


GO
ALTER TABLE [ib].[BbanFileHistory]
    ADD CONSTRAINT [FK_BbanFileHistory_BbanFile] FOREIGN KEY ([BbanFileId]) REFERENCES [ib].[BbanFile] ([BbanFileId]);


GO
PRINT N'Creating [ib].[FK_BbanFileHistory_BbanFileStatus]...';


GO
ALTER TABLE [ib].[BbanFileHistory]
    ADD CONSTRAINT [FK_BbanFileHistory_BbanFileStatus] FOREIGN KEY ([BbanFileStatusId]) REFERENCES [ib].[EnumBbanFileStatus] ([StatusId]);


GO
PRINT N'Creating [ib].[FK_IBanHistory_IBan]...';


GO
ALTER TABLE [ib].[IBanHistory]
    ADD CONSTRAINT [FK_IBanHistory_IBan] FOREIGN KEY ([IBanId]) REFERENCES [ib].[IBan] ([IBanId]);


GO
PRINT N'Creating [ib].[FK_IBanHistory_IBanStatus]...';


GO
ALTER TABLE [ib].[IBanHistory]
    ADD CONSTRAINT [FK_IBanHistory_IBanStatus] FOREIGN KEY ([IBanStatusId]) REFERENCES [ib].[EnumIBanStatus] ([StatusId]);


GO
PRINT N'Creating [ib].[FK_IBan_BbanFile]...';


GO
ALTER TABLE [ib].[IBan]
    ADD CONSTRAINT [FK_IBan_BbanFile] FOREIGN KEY ([BbanFileId]) REFERENCES [ib].[BbanFile] ([BbanFileId]);


GO
PRINT N'Creating [ib].[FK_BbanImport_BbanFile]...';


GO
ALTER TABLE [ib].[BbanImport]
    ADD CONSTRAINT [FK_BbanImport_BbanFile] FOREIGN KEY ([BbanFileId]) REFERENCES [ib].[BbanFile] ([BbanFileId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4391af8d-f81e-4f06-9f9f-eb66587c435c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4391af8d-f81e-4f06-9f9f-eb66587c435c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd9e153f2-b23f-45c9-af95-f11fdf48e82d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d9e153f2-b23f-45c9-af95-f11fdf48e82d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '34c61969-5e68-47fd-a5ee-956d80a59912')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('34c61969-5e68-47fd-a5ee-956d80a59912')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6bc99953-c931-4eb5-9bcf-3cf547052eb2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6bc99953-c931-4eb5-9bcf-3cf547052eb2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '71428529-1f3c-4e0a-825f-25a2e779181a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('71428529-1f3c-4e0a-825f-25a2e779181a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6d9a350c-a107-443a-b87d-d95dfdf0971b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6d9a350c-a107-443a-b87d-d95dfdf0971b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '93c2982d-d210-4805-aff6-838f9fc619ed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('93c2982d-d210-4805-aff6-838f9fc619ed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b81123e1-078d-4531-b8d6-810c3a5004fc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b81123e1-078d-4531-b8d6-810c3a5004fc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1c03ee99-6d8b-4552-b6c8-20134ac568db')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1c03ee99-6d8b-4552-b6c8-20134ac568db')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd9a6a38f-d326-44f1-a432-1c994d993259')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d9a6a38f-d326-44f1-a432-1c994d993259')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fb6e05c3-1d3b-47cb-b5de-c51de5cc86b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fb6e05c3-1d3b-47cb-b5de-c51de5cc86b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd0571d49-0255-4ec4-9d11-ab0391d0dd09')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d0571d49-0255-4ec4-9d11-ab0391d0dd09')

GO

GO
BEGIN /* REGION [ EnumBbanFileStatus ]*/
	DELETE FROM [ib].[EnumBbanFileStatus]
	INSERT INTO [ib].[EnumBbanFileStatus] (StatusId, BbanFileStatus) VALUES
	(11, 'Uploaded'),
	(12, 'UploadCanceled'),
	(13, 'Verifying'),
	(14, 'Verified'),
	(15, 'VerifiedFailed'),
	(16, 'WaitingForApproval'),
	(17, 'Approved'),
	(18, 'ApprovalDenied'),
	(19, 'Importing'),
	(20, 'Imported'),
	(21, 'ImportFailed')
END

BEGIN /* REGION [ EnumIBanStatus ] */
	DELETE FROM [ib].[EnumIBanStatus]
	INSERT INTO [ib].[EnumIBanStatus] (StatusId, IbanStatus) VALUES
	(11, 'Available'),
	(12, 'Assigned'),
	(13, 'Canceled'),
	(14, 'Active')
END
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
