namespace BND.Services.Payments.PaymentIdInfo.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    /// <summary>
    /// Class p_iDealTransaction.
    /// </summary>
    [Table("ideal.Transaction")]
    public partial class p_iDealTransaction
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public p_iDealTransaction()
        {
            TransactionStatusHistories = new HashSet<p_iDealTransactionStatusHistory>();
        }
        /// <summary>
        /// Unique 16-digit number within iDEAL. The number consists of the acquirerID (first four positions) and a unique number generated by the 
        /// Acquirer(12 positions). Ultimately appears on payment confirmation (bank statement or account overview of the Consumer and Merchant).
        /// </summary>
        [Key]
        [StringLength(16)]
        public string TransactionID { get; set; }
        /// <summary>
        /// Gets or sets the acquirer identifier.
        /// </summary>
        /// <value>The acquirer identifier.</value>
        [Required]
        [StringLength(4)]
        public string AcquirerID { get; set; }
        /// <summary>
        /// Gets or sets the merchant identifier.
        /// </summary>
        [Required]
        [StringLength(9)]
        public string MerchantID { get; set; }
        /// <summary>
        /// Gets or sets the sub identifier.
        /// </summary>
        public int? SubID { get; set; }
        /// <summary>
        /// The ID (BIC) of the Issuer selected by the Consumer, as stated in the Issuer list.
        /// </summary>
        [Required]
        [StringLength(11)]
        public string IssuerID { get; set; }
        /// <summary>
        /// The complete Issuer URL to which the Consumershall be redirected by the Merchantfor authenticationand authorisation of the transaction.
        /// </summary>
        [StringLength(512)]
        public string IssuerAuthenticationURL { get; set; }
        /// <summary>
        /// Url to which consumer is redirected after authorizing the payment
        /// </summary>
        [Required]
        [StringLength(512)]
        public string MerchantReturnURL { get; set; }

        /// <summary>
        /// The Transaction.entranceCode is an 'authentication identifier' to facilitate continuation of the session between Merchant and Consumer, 
        /// even if the existing session has been lost. It enables the Merchantto recognise the Consumerassociated with a (completed) transaction.
        /// The Transaction.entranceCode is sent to the Merchantin the Redirect.The Transaction.entranceCode must have a minimum variation of
        /// 1 millionand shouldcomprise letters and/or figures (maximum 40 positions).The Transaction.entranceCode is created by the Merchant and 
        /// passed to the Issuer.
        /// </summary>
        [Required]
        [StringLength(40)]
        public string EntranceCode { get; set; }
        /// <summary>
        /// Unique identification of the order within the Merchant’s system. Ultimately appears on the payment confirmation (Bank statement / 
        /// account overview of the Consumer and Merchant)
        /// </summary>
        [Required]
        [StringLength(35)]
        public string PurchaseID { get; set; }

        /// <summary>
        /// The amount payable in euro (with a period (.) used asdecimal separator).
        /// </summary>
        public decimal Amount { get; set; }
        /// <summary>
        /// Gets or sets the ALPHA-3 currency code, the default value is EUR.
        /// </summary>
        [Required]
        [StringLength(3)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or sets the ALPHA-2 language code, the default value is NL.
        /// </summary>
        [Required]
        [StringLength(2)]
        public string Language { get; set; }
        /// <summary>
        /// Description of the product(s) or services being paid for. This field must not contain characters that can lead to problems  (for example 
        /// those occurring in HTML editing codes). To prevent any possible errors most iDEAL systems willreject any description that contains HTML-tags 
        /// and other such code.
        /// </summary>
        [StringLength(35)]
        public string Description { get; set; }
        /// <summary>
        /// Name of the Consumer according to the name of the account used for payment.In the exceptional case that 
        /// the consumerName cannot be retrieved by the Issuer, this is filled with ‘N/A’. If governing law prevents Issuers outside the Netherlands
        /// from disclosing this information, field may be omitted.
        /// </summary>
        [StringLength(70)]
        public string ConsumerName { get; set; }
        /// <summary>
        /// The IBAN of the Consumer Bank account used for payment. If governing law prevents Issuersoutside the
        /// Netherlands from disclosing this information, field may be omitted.
        /// </summary>
        [StringLength(34)]
        public string ConsumerIBAN { get; set; }
        /// <summary>
        /// BIC of the bank where the Consumer account is held.If governing law prevents Issuers outside the
        /// Netherlands from disclosing this information, field may be omitted.
        /// </summary>
        [StringLength(11)]
        public string ConsumerBIC { get; set; }
        /// <summary>
        /// Gets or sets the transaction request date timestamp.
        /// </summary>
        public DateTime TransactionRequestDateTimestamp { get; set; }
        /// <summary>
        /// Gets or sets the transaction response date timestamp.
        /// </summary>
        public DateTime TransactionResponseDateTimestamp { get; set; }
        /// <summary>
        /// Gets or sets the transaction create date timestamp.
        /// </summary>
        public DateTime TransactionCreateDateTimestamp { get; set; }
        /// <summary>
        /// Gets or sets the BND IBAN of customer.
        /// </summary>
        [Required]
        [StringLength(34)]
        public string BNDIBAN { get; set; }
        /// <summary>
        /// Gets or sets the type of the payment.
        /// </summary>
        [Required]
        [StringLength(64)]
        public string PaymentType { get; set; }
        /// <summary>
        /// Time until consumer has to have paid, otherwise the transaction is marked as expired by the issuer (consumer's bank)
        /// </summary>
        public int ExpirationSecondPeriod { get; set; }
        /// <summary>
        /// Gets or sets the expected customer iban.
        /// </summary>
        [Required]
        [StringLength(34)]
        public string ExpectedCustomerIBAN { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether this instance is system fail.
        /// </summary>
        public bool IsSystemFail { get; set; }
        /// <summary>
        /// Gets or sets the today attempts.
        /// </summary>
        public int TodayAttempts { get; set; }
        /// <summary>
        /// Gets or sets the latest attempts date timestamp.
        /// </summary>
        public DateTime? LatestAttemptsDateTimestamp { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<p_iDealTransactionStatusHistory> TransactionStatusHistories { get; set; }
    }
}
