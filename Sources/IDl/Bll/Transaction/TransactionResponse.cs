using BND.Services.Payments.iDeal.iDealClients.Base;
using System;
using System.Xml.Linq;

namespace BND.Services.Payments.iDeal.iDealClients.Transaction
{
    /// <summary>
    /// Class TransactionResponse is a response for transaction.
    /// </summary>
    public class TransactionResponse : iDealResponseBase
    {
        #region [Fields]
        /// <summary>
        /// Url of issuer to which the customer has to be redirected
        /// </summary>
        public string IssuerAuthenticationUrl { get; private set; }
        /// <summary>
        /// Acquirer id (first four digits) + unique id generated by acquirer (last 12 digits)
        /// </summary>
        public string TransactionId { get; private set; }
        /// <summary>
        /// Unique id determined by the acceptant, which will eventually show on the bank account
        /// </summary>
        public string PurchaseId { get; private set; }
        /// <summary>
        /// Gets or sets the creation date.
        /// </summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>
        /// Gets or sets the transaction request time stamp.
        /// </summary>
        public DateTime TransactionRequestDateTimeStamp { get; set; }
        #endregion


        #region [Constructor]
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionResponse" /> class.
        /// </summary>
        /// <param name="xmlTransactionResponse">The XML directory response.</param>
        public TransactionResponse(string xmlTransactionResponse)
        {
            // Parse document
            var xDocument = XElement.Parse(xmlTransactionResponse);
            XNamespace xmlNamespace = Properties.Resources.XML_NAMESPACE;

            // Create datetimestamp
            CreateDateTimeStamp = Convert.ToDateTime(xDocument.Element(xmlNamespace + "createDateTimestamp").Value);

            // Acquirer id
            AcquirerId = (int)xDocument.Element(xmlNamespace + "Acquirer").Element(xmlNamespace + "acquirerID");

            // IssuerAuthenticationUrl
            IssuerAuthenticationUrl = xDocument.Element(xmlNamespace + "Issuer").Element(xmlNamespace + "issuerAuthenticationURL").Value;

            // TransactionId
            TransactionId = xDocument.Element(xmlNamespace + "Transaction").Element(xmlNamespace + "transactionID").Value;

            // PurchaseId
            PurchaseId = xDocument.Element(xmlNamespace + "Transaction").Element(xmlNamespace + "purchaseID").Value;

            //CreationDate
            CreatedDate = Convert.ToDateTime(xDocument.Element(xmlNamespace + "Transaction")
                                          .Element(xmlNamespace + "transactionCreateDateTimestamp").Value);
        }
        #endregion
    }
}
